DIGEST e318a3a1a3c683926bb5ea06c58336e5
FTop.Freer
R17:35 Coq.Program.Program <> <> lib
R39:57 Coq.Program.Tactics <> <> lib
R61:78 Hask.Control.Monad <> <> lib
ind 122:124 <> Fix
constr 159:163 <> mkFix
R135:138 Coq.Init.Logic <> :type_scope:x_'->'_x not
R180:183 Coq.Init.Logic <> :type_scope:x_'->'_x not
R184:184 Coq.Init.Logic <> :type_scope:x_'->'_x not
R195:199 Coq.Init.Logic <> :type_scope:x_'->'_x not
R200:202 Top.Freer <> Fix ind
R204:204 Top.Freer <> f var
R186:189 Coq.Init.Logic <> :type_scope:x_'->'_x not
R190:192 Top.Freer <> Fix ind
R194:194 Top.Freer <> f var
R185:185 Top.Freer <> x var
R177:177 Top.Freer <> f var
R179:179 Top.Freer <> x var
R218:222 Top.Freer <> mkFix constr
R218:222 Top.Freer <> mkFix constr
def 247:252 <> Freer'
R263:266 Coq.Init.Logic <> :type_scope:x_'->'_x not
R296:298 Top.Freer <> Fix ind
R311:313 Coq.Init.Datatypes <> :type_scope:x_'+'_x not
R310:310 Top.Freer <> a var
R314:314 Top.Freer <> f var
R316:316 Top.Freer <> t var
ind 336:340 <> Freer
constr 386:389 <> Pure
constr 412:417 <> Impure
R351:354 Coq.Init.Logic <> :type_scope:x_'->'_x not
R394:397 Coq.Init.Logic <> :type_scope:x_'->'_x not
R398:402 Top.Freer <> Freer ind
R406:406 Top.Freer <> a var
R404:404 Top.Freer <> f var
R393:393 Top.Freer <> a var
R434:437 Coq.Init.Logic <> :type_scope:x_'->'_x not
R438:438 Coq.Init.Logic <> :type_scope:x_'->'_x not
R453:457 Coq.Init.Logic <> :type_scope:x_'->'_x not
R458:462 Top.Freer <> Freer ind
R466:466 Top.Freer <> a var
R464:464 Top.Freer <> f var
R440:443 Coq.Init.Logic <> :type_scope:x_'->'_x not
R444:448 Top.Freer <> Freer ind
R452:452 Top.Freer <> a var
R450:450 Top.Freer <> f var
R439:439 Top.Freer <> x var
R431:431 Top.Freer <> f var
R433:433 Top.Freer <> x var
R480:483 Top.Freer <> Pure constr
R480:483 Top.Freer <> Pure constr
R504:509 Top.Freer <> Impure constr
R504:509 Top.Freer <> Impure constr
def 534:540 <> toFreer
R548:553 Top.Freer <> Freer' def
R562:566 Top.Freer <> Freer ind
R570:570 Top.Freer <> a var
R568:568 Top.Freer <> f var
R583:583 Top.Freer <> x var
R594:598 Top.Freer <> mkFix constr
R601:603 Coq.Init.Datatypes <> inl constr
R613:616 Top.Freer <> Pure constr
R618:618 Top.Freer <> a var
R624:628 Top.Freer <> mkFix constr
R631:633 Coq.Init.Datatypes <> inr constr
R643:648 Top.Freer <> Impure constr
R660:664 Coq.Program.Basics <> :program_scope:x_'∘'_x not
R653:659 Top.Freer <> toFreer def
def 685:693 <> fromFreer
R701:705 Top.Freer <> Freer ind
R714:719 Top.Freer <> Freer' def
R723:723 Top.Freer <> a var
R721:721 Top.Freer <> f var
R736:736 Top.Freer <> x var
R747:750 Top.Freer <> Pure constr
R761:765 Top.Freer <> mkFix constr
R787:796 Coq.Init.Logic <> False_rect scheme
R779:781 Coq.Init.Datatypes <> inl constr
R783:783 Top.Freer <> a var
R771:775 Coq.Init.Logic <> False ind
R805:810 Top.Freer <> Impure constr
R819:823 Top.Freer <> mkFix constr
R843:847 Coq.Program.Basics <> :program_scope:x_'∘'_x not
R834:842 Top.Freer <> fromFreer def
R826:828 Coq.Init.Datatypes <> inr constr
prf 867:883 <> fromFreer_toFreer
R891:896 Top.Freer <> Freer' def
R926:928 Coq.Init.Logic <> :type_scope:x_'='_x not
R905:913 Top.Freer <> fromFreer def
R916:922 Top.Freer <> toFreer def
R924:924 Top.Freer <> x var
R929:929 Top.Freer <> x var
R1171:1173 Coq.Init.Logic <> :type_scope:x_'='_x not
R1174:1178 Coq.Init.Logic <> False ind
R1171:1173 Coq.Init.Logic <> :type_scope:x_'='_x not
R1174:1178 Coq.Init.Logic <> False ind
R1276:1282 Coq.Program.Basics <> compose def
prf 1335:1351 <> toFreer_fromFreer
R1359:1363 Top.Freer <> Freer ind
R1393:1395 Coq.Init.Logic <> :type_scope:x_'='_x not
R1372:1378 Top.Freer <> toFreer def
R1381:1389 Top.Freer <> fromFreer def
R1391:1391 Top.Freer <> x var
R1396:1396 Top.Freer <> x var
R1459:1465 Coq.Program.Basics <> compose def
def 1514:1522 <> Freer_map
R1535:1538 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1547:1551 Top.Freer <> Freer ind
R1555:1555 Top.Freer <> a var
R1553:1553 Top.Freer <> r var
R1560:1564 Top.Freer <> Freer ind
R1568:1568 Top.Freer <> b var
R1566:1566 Top.Freer <> r var
R1581:1581 Top.Freer <> x var
R1592:1595 Top.Freer <> Pure constr
R1602:1605 Top.Freer <> Pure constr
R1608:1608 Top.Freer <> f var
R1617:1622 Top.Freer <> Impure constr
R1631:1636 Top.Freer <> Impure constr
R1650:1658 Top.Freer <> Freer_map def
R1665:1665 Top.Freer <> x var
R1660:1660 Top.Freer <> f var
inst 1694:1706 <> Freer_Functor
R1717:1720 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1729:1735 Hask.Data.Functor <> Functor class
R1738:1742 Top.Freer <> Freer ind
R1744:1744 Top.Freer <> f var
R1754:1757 Hask.Data.Functor <> fmap meth
R1763:1771 Top.Freer <> Freer_map def
def 1788:1795 <> Freer_ap
R1807:1811 Top.Freer <> Freer ind
R1817:1820 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1813:1813 Top.Freer <> r var
R1830:1834 Top.Freer <> Freer ind
R1838:1838 Top.Freer <> a var
R1836:1836 Top.Freer <> r var
R1843:1847 Top.Freer <> Freer ind
R1851:1851 Top.Freer <> b var
R1849:1849 Top.Freer <> r var
R1867:1867 Top.Freer <> x var
R1864:1864 Top.Freer <> f var
R1878:1881 Top.Freer <> Pure constr
R1886:1889 Top.Freer <> Pure constr
R1900:1903 Top.Freer <> Pure constr
R1906:1906 Top.Freer <> f var
R1915:1918 Top.Freer <> Pure constr
R1923:1928 Top.Freer <> Impure constr
R1937:1942 Top.Freer <> Impure constr
R1956:1964 Top.Freer <> Freer_map def
R1971:1971 Top.Freer <> x var
R1966:1966 Top.Freer <> f var
R1979:1984 Top.Freer <> Impure constr
R2001:2006 Top.Freer <> Impure constr
R2020:2027 Top.Freer <> Freer_ap def
R2032:2032 Top.Freer <> x var
inst 2063:2079 <> Freer_Applicative
R2090:2093 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2102:2112 Hask.Control.Applicative <> Applicative class
R2115:2119 Top.Freer <> Freer ind
R2121:2121 Top.Freer <> f var
R2156:2157 Hask.Control.Applicative <> ap meth
R2131:2134 Hask.Control.Applicative <> pure meth
R2148:2151 Top.Freer <> Pure constr
R2173:2180 Top.Freer <> Freer_ap def
def 2195:2204 <> Freer_join
R2216:2220 Top.Freer <> Freer ind
R2225:2229 Top.Freer <> Freer ind
R2231:2231 Top.Freer <> r var
R2222:2222 Top.Freer <> r var
R2239:2243 Top.Freer <> Freer ind
R2247:2247 Top.Freer <> a var
R2245:2245 Top.Freer <> r var
R2260:2260 Top.Freer <> f var
R2271:2274 Top.Freer <> Pure constr
R2291:2296 Top.Freer <> Impure constr
R2305:2310 Top.Freer <> Impure constr
R2324:2333 Top.Freer <> Freer_join def
R2338:2338 Top.Freer <> x var
inst 2367:2377 <> Freer_Monad
R2388:2391 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2400:2404 Hask.Control.Monad <> Monad class
R2407:2411 Top.Freer <> Freer ind
R2413:2413 Top.Freer <> f var
R2423:2426 Hask.Control.Monad <> join meth
R2432:2441 Top.Freer <> Freer_join def
mod 2456:2464 <> FreerLaws
R2476:2484 Hask.Control.Monad MonadLaws <> modtype
R2503:2526 Coq.Logic.FunctionalExtensionality <> <> lib
inst 2547:2563 FreerLaws Freer_FunctorLaws
R2574:2577 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2586:2596 Top.Freer FreerLaws FunctorLaws class
R2599:2603 Top.Freer <> Freer ind
R2605:2605 Top.Freer <> f var
R2683:2684 Coq.Init.Datatypes <> id def
R2815:2818 Hask.Ltac <> comp def
inst 2893:2913 FreerLaws Freer_ApplicativeLaws
R2924:2927 Coq.Init.Logic <> :type_scope:x_'->'_x not
R2936:2950 Top.Freer FreerLaws ApplicativeLaws class
R2953:2957 Top.Freer <> Freer ind
R2959:2959 Top.Freer <> f var
R3024:3032 Top.Freer <> Freer_map def
R3035:3038 Hask.Ltac <> comp def
R3063:3064 Coq.Init.Datatypes <> id def
R3174:3181 Top.Freer <> Freer_ap def
R3184:3192 Top.Freer <> Freer_map def
R3195:3198 Hask.Ltac <> comp def
R3905:3912 Top.Freer <> Freer_ap def
R3915:3923 Top.Freer <> Freer_map def
R3926:3929 Hask.Ltac <> comp def
R4076:4083 Top.Freer <> Freer_ap def
R4086:4094 Top.Freer <> Freer_map def
R4097:4100 Hask.Ltac <> comp def
inst 4181:4195 FreerLaws Freer_MonadLaws
R4206:4209 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4218:4226 Top.Freer FreerLaws MonadLaws class
R4229:4233 Top.Freer <> Freer ind
R4235:4235 Top.Freer <> f var
R4300:4309 Top.Freer <> Freer_join def
R4312:4320 Top.Freer <> Freer_map def
R4323:4326 Hask.Ltac <> comp def
R4450:4459 Top.Freer <> Freer_join def
R4462:4470 Top.Freer <> Freer_map def
R4473:4476 Hask.Ltac <> comp def
R4501:4502 Coq.Init.Datatypes <> id def
R4613:4622 Top.Freer <> Freer_join def
R4625:4633 Top.Freer <> Freer_map def
R4636:4639 Hask.Ltac <> comp def
R4664:4665 Coq.Init.Datatypes <> id def
R4720:4728 Top.Freer FreerLaws <> mod
def 4741:4744 <> iter
R4748:4754 Hask.Data.Functor <> Functor class
R4770:4773 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4767:4767 Top.Freer <> f var
R4783:4787 Top.Freer <> Freer ind
R4791:4791 Top.Freer <> a var
R4789:4789 Top.Freer <> f var
R4796:4796 Top.Freer <> a var
R4809:4810 Top.Freer <> fr var
R4823:4826 Top.Freer <> Pure constr
R4841:4846 Top.Freer <> Impure constr
R4855:4857 Top.Freer <> phi var
R4860:4863 Hask.Data.Functor <> fmap meth
R4874:4877 Hask.Ltac <> ::x_'\o'_x not
R4866:4869 Top.Freer <> iter def
R4871:4873 Top.Freer <> phi var
ind 4902:4906 <> iterP
constr 4981:4988 <> IterPure
constr 5033:5042 <> IterImpure
R4910:4916 Hask.Data.Functor <> Functor class
R4932:4935 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4937:4940 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4929:4929 Top.Freer <> f var
R4960:4963 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4965:4968 Coq.Init.Logic <> :type_scope:x_'->'_x not
R4951:4955 Top.Freer <> Freer ind
R5008:5012 Top.Freer <> iterP ind
R5027:5027 Top.Freer <> x var
R5019:5022 Top.Freer <> Pure constr
R5024:5024 Top.Freer <> x var
R5014:5016 Top.Freer <> phi var
R5008:5012 Top.Freer <> a var
R5008:5012 Top.Freer <> H var
R5008:5012 Top.Freer <> f var
R5075:5084 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5102:5111 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5112:5116 Top.Freer <> iterP ind
R5135:5135 Top.Freer <> r var
R5123:5128 Top.Freer <> Impure constr
R5132:5132 Top.Freer <> g var
R5130:5130 Top.Freer <> h var
R5118:5120 Top.Freer <> phi var
R5112:5116 Top.Freer <> a var
R5112:5116 Top.Freer <> H var
R5112:5116 Top.Freer <> f var
R5085:5089 Top.Freer <> iterP ind
R5101:5101 Top.Freer <> r var
R5096:5096 Top.Freer <> g var
R5098:5098 Top.Freer <> x var
R5091:5093 Top.Freer <> phi var
R5085:5089 Top.Freer <> a var
R5085:5089 Top.Freer <> H var
R5085:5089 Top.Freer <> f var
R5068:5070 Top.Freer <> phi var
R5074:5074 Top.Freer <> x var
R5072:5072 Top.Freer <> h var
def 5150:5154 <> liftF
R5165:5168 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5191:5194 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5195:5199 Top.Freer <> Freer ind
R5203:5203 Top.Freer <> a var
R5201:5201 Top.Freer <> f var
R5188:5188 Top.Freer <> f var
R5190:5190 Top.Freer <> a var
R5219:5224 Top.Freer <> Impure constr
R5228:5231 Top.Freer <> Pure constr
R5226:5226 Top.Freer <> x var
def 5246:5251 <> uniter
R5255:5261 Hask.Data.Functor <> Functor class
R5283:5286 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5274:5278 Top.Freer <> Freer ind
R5280:5280 Top.Freer <> f var
R5295:5298 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5299:5299 Top.Freer <> a var
R5292:5292 Top.Freer <> f var
R5294:5294 Top.Freer <> a var
R5309:5312 Hask.Ltac <> ::x_'\o'_x not
R5306:5308 Top.Freer <> psi var
R5313:5317 Top.Freer <> liftF def
def 5330:5336 <> retract
R5340:5344 Hask.Control.Monad <> Monad class
R5356:5360 Top.Freer <> Freer ind
R5362:5362 Top.Freer <> f var
R5369:5369 Top.Freer <> f var
R5371:5371 Top.Freer <> a var
R5384:5385 Top.Freer <> fr var
R5398:5401 Top.Freer <> Pure constr
R5408:5411 Hask.Control.Applicative <> pure meth
R5421:5426 Top.Freer <> Impure constr
R5436:5441 Hask.Control.Monad <> :monad_scope:x_'>>='_x not
R5454:5454 Hask.Control.Monad <> :monad_scope:x_'>>='_x not
R5449:5452 Hask.Ltac <> ::x_'\o'_x not
R5442:5448 Top.Freer <> retract def
def 5473:5481 <> hoistFree
R5502:5505 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5508:5508 Top.Freer <> a var
R5501:5501 Top.Freer <> a var
R5518:5522 Top.Freer <> Freer ind
R5524:5524 Top.Freer <> f var
R5531:5535 Top.Freer <> Freer ind
R5539:5539 Top.Freer <> b var
R5537:5537 Top.Freer <> g var
R5552:5553 Top.Freer <> fr var
R5564:5567 Top.Freer <> Pure constr
R5574:5577 Top.Freer <> Pure constr
R5585:5590 Top.Freer <> Impure constr
R5599:5604 Top.Freer <> Impure constr
R5626:5629 Hask.Ltac <> ::x_'\o'_x not
R5615:5623 Top.Freer <> hoistFree def
R5625:5625 Top.Freer <> n var
R5630:5630 Top.Freer <> g var
R5607:5607 Top.Freer <> n var
def 5650:5657 <> foldFree
R5661:5665 Hask.Control.Monad <> Monad class
R5689:5692 Coq.Init.Logic <> :type_scope:x_'->'_x not
R5693:5693 Top.Freer <> m var
R5695:5695 Top.Freer <> x var
R5688:5688 Top.Freer <> x var
R5705:5709 Top.Freer <> Freer ind
R5711:5711 Top.Freer <> f var
R5720:5720 Top.Freer <> m var
R5722:5722 Top.Freer <> a var
R5735:5736 Top.Freer <> fr var
R5747:5750 Top.Freer <> Pure constr
R5757:5760 Hask.Control.Applicative <> pure meth
R5768:5773 Top.Freer <> Impure constr
R5782:5785 Hask.Control.Monad <> join meth
R5788:5791 Hask.Data.Functor <> fmap meth
R5812:5812 Top.Freer <> n var
R5804:5807 Hask.Ltac <> ::x_'\o'_x not
R5794:5801 Top.Freer <> foldFree def
R5803:5803 Top.Freer <> n var
def 6144:6149 <> cutoff
R6156:6158 Coq.Init.Datatypes <> nat ind
R6168:6172 Top.Freer <> Freer ind
R6181:6185 Top.Freer <> Freer ind
R6190:6195 Coq.Init.Datatypes <> option ind
R6197:6197 Top.Freer <> a var
R6187:6187 Top.Freer <> f var
R6211:6211 Top.Freer <> n var
R6222:6222 Coq.Init.Datatypes <> O constr
R6227:6230 Top.Freer <> Pure constr
R6232:6235 Coq.Init.Datatypes <> None constr
R6241:6241 Coq.Init.Datatypes <> S constr
R6259:6260 Top.Freer <> fr var
R6273:6276 Top.Freer <> Pure constr
R6283:6286 Top.Freer <> Pure constr
R6289:6292 Coq.Init.Datatypes <> Some constr
R6303:6308 Top.Freer <> Impure constr
R6317:6322 Top.Freer <> Impure constr
R6335:6338 Hask.Ltac <> ::x_'\o'_x not
R6327:6332 Top.Freer <> cutoff def
R6334:6334 Top.Freer <> n var
