DIGEST b562ef481d6c8ef201833863c5bfffd9
FTop.Comp
R17:35 Coq.Program.Program <> <> lib
R39:57 Coq.Program.Tactics <> <> lib
R61:78 Coq.Sets.Ensembles <> <> lib
R82:99 Hask.Control.Monad <> <> lib
def 229:232 <> Comp
R249:252 Coq.Init.Logic <> :type_scope:x_'->'_x not
R248:248 Top.Comp <> A var
inst 269:280 <> Comp_Functor
R284:290 Hask.Data.Functor <> Functor class
R292:295 Top.Comp <> Comp def
R370:373 Hask.Data.Functor <> fmap meth
R400:403 Coq.Init.Logic <> :type_scope:x_'->'_x not
R404:404 Top.Comp <> b var
R399:399 Top.Comp <> a var
R413:416 Coq.Init.Logic <> :type_scope:x_'->'_x not
R412:412 Top.Comp <> a var
R428:428 Top.Comp <> b var
R434:441 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R447:449 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R446:446 Top.Comp <> a var
R460:463 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R455:457 Coq.Init.Logic <> :type_scope:x_'='_x not
R450:451 Top.Comp <> ma var
R453:454 Top.Comp <> xa var
R458:459 Top.Comp <> xb var
R464:465 Top.Comp <> fa var
R467:468 Top.Comp <> xa var
inst 493:508 <> Comp_Applicative
R512:522 Hask.Control.Applicative <> Applicative class
R524:527 Top.Comp <> Comp def
R584:585 Hask.Control.Applicative <> ap meth
R540:543 Hask.Control.Applicative <> pure meth
R558:558 Top.Comp <> A var
R566:566 Top.Comp <> A var
R573:575 Coq.Init.Logic <> :type_scope:x_'='_x not
R572:572 Top.Comp <> a var
R576:577 Top.Comp <> a' var
R602:602 Coq.Init.Logic <> :type_scope:x_'->'_x not
R609:613 Coq.Init.Logic <> :type_scope:x_'->'_x not
R604:607 Coq.Init.Logic <> :type_scope:x_'->'_x not
R608:608 Top.Comp <> B var
R603:603 Top.Comp <> A var
R625:628 Coq.Init.Logic <> :type_scope:x_'->'_x not
R624:624 Top.Comp <> A var
R639:639 Top.Comp <> B var
R645:651 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R667:683 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R662:665 Coq.Init.Logic <> :type_scope:x_'->'_x not
R666:666 Top.Comp <> B var
R661:661 Top.Comp <> A var
R694:697 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R690:692 Coq.Init.Logic <> :type_scope:x_'='_x not
R684:687 Top.Comp <> fa_b var
R689:689 Top.Comp <> a var
R693:693 Top.Comp <> b var
R701:704 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R698:698 Top.Comp <> g var
R700:700 Top.Comp <> a var
R705:705 Top.Comp <> f var
R707:710 Top.Comp <> fa_b var
inst 735:750 <> Comp_Alternative
R754:764 Hask.Control.Applicative <> Alternative class
R766:769 Top.Comp <> Comp def
R813:818 Hask.Control.Applicative <> choose meth
R782:786 Hask.Control.Applicative <> empty meth
R802:806 Coq.Init.Logic <> False ind
R835:838 Coq.Init.Logic <> :type_scope:x_'->'_x not
R834:834 Top.Comp <> X var
R851:854 Coq.Init.Logic <> :type_scope:x_'->'_x not
R850:850 Top.Comp <> X var
R870:873 Coq.Init.Logic <> :type_scope:x_'\/'_x not
R866:867 Top.Comp <> f1 var
R869:869 Top.Comp <> x var
R874:875 Top.Comp <> f2 var
R877:877 Top.Comp <> x var
inst 902:911 <> Comp_Monad
R915:919 Hask.Control.Monad <> Monad class
R921:924 Top.Comp <> Comp def
R937:940 Hask.Control.Monad <> join meth
R955:955 Coq.Init.Logic <> :type_scope:x_'->'_x not
R965:969 Coq.Init.Logic <> :type_scope:x_'->'_x not
R957:960 Coq.Init.Logic <> :type_scope:x_'->'_x not
R956:956 Top.Comp <> A var
R981:987 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R990:991 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R996:999 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R992:993 Top.Comp <> f' var
R995:995 Top.Comp <> a var
R1000:1000 Top.Comp <> f var
R1002:1003 Top.Comp <> f' var
mod 1018:1025 <> CompLaws
R1063:1086 Coq.Logic.FunctionalExtensionality <> <> lib
ax 1096:1103 CompLaws prop_ext
R1128:1128 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1136:1140 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1142:1144 Coq.Init.Logic <> :type_scope:x_'='_x not
R1141:1141 Top.Comp <> P var
R1145:1145 Top.Comp <> Q var
R1130:1134 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R1129:1129 Top.Comp <> P var
R1135:1135 Top.Comp <> Q var
R1174:1177 Hask.Ltac <> comp def
R1180:1181 Coq.Init.Datatypes <> id def
R1231:1233 Coq.Init.Logic <> :type_scope:x_'='_x not
R1231:1233 Coq.Init.Logic <> :type_scope:x_'='_x not
R1288:1290 Coq.Init.Logic <> and ind
R1288:1290 Coq.Init.Logic <> and ind
R1351:1357 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1363:1364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1351:1357 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1363:1364 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1433:1439 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1445:1446 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1433:1439 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1445:1446 Coq.Init.Logic <> :type_scope:'exists'_x_'..'_x_','_x not
R1493:1495 Coq.Init.Logic <> and ind
R1493:1495 Coq.Init.Logic <> and ind
R1628:1635 Top.Comp CompLaws prop_ext prfax
inst 1781:1796 CompLaws Comp_FunctorLaws
R1804:1814 Hask.Control.Monad MonadLaws FunctorLaws class
R1816:1819 Top.Comp <> Comp def
inst 1839:1858 CompLaws Comp_ApplicativeLaws
R1862:1876 Hask.Control.Monad MonadLaws ApplicativeLaws class
R1878:1881 Top.Comp <> Comp def
inst 1901:1914 CompLaws Comp_MonadLaws
R1924:1932 Hask.Control.Monad MonadLaws MonadLaws class
R1934:1937 Top.Comp <> Comp def
R1945:1952 Top.Comp CompLaws <> mod
def 1967:1970 <> comp
R1979:1982 Coq.Init.Logic <> :type_scope:x_'->'_x not
R1991:1994 Top.Comp <> Comp def
R1996:1996 Top.Comp <> A var
R2001:2001 Top.Comp <> f var
def 2016:2026 <> computes_to
R2045:2048 Top.Comp <> Comp def
R2050:2050 Top.Comp <> A var
R2058:2058 Top.Comp <> A var
R2071:2072 Top.Comp <> ca var
R2074:2074 Top.Comp <> a var
R2101:2111 Top.Comp <> computes_to def
not 2087:2087 <> ::x_'‚Üù'_x
